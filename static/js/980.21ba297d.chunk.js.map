{"version":3,"file":"static/js/980.21ba297d.chunk.js","mappings":"gRAMMA,GAAUC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,4EAKPC,GAAQD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,+CAILE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4CAIPI,GAAYJ,EAAAA,EAAAA,IAAO,MAAPA,CAAH,gDAITK,GAAaL,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4JASVM,GAAkBN,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wGAMfO,GAAuBP,EAAAA,EAAAA,IAAO,MAAPA,CAAH,uCAIX,SAASQ,IAAgB,IAAD,IAC7BC,GAAeC,EAAAA,EAAAA,IAAU,MAAzBD,WACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WC5CG,IAAsBC,KD6CpBN,EC5CRO,MAAM,sCAAD,OAC4BD,EAD5B,oBAC0CE,EAAAA,EAD1C,oBAEVC,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,qCAChB,KDsCIL,MAAK,SAAAN,GAAK,OAAIC,EAASD,EAAb,IACVY,MAAMC,QAAQC,IAClB,GAAE,CAACjB,IAEJ,IAAMkB,GAAWC,EAAAA,EAAAA,MAEjB,IAAKhB,GAAuC,IAA9BiB,OAAOC,KAAKlB,GAAOmB,OAC/B,OAAO,kEAGT,IACEC,EAKEpB,EALFoB,eACAC,EAIErB,EAJFqB,qBACAC,EAGEtB,EAHFsB,WACAC,EAEEvB,EAFFuB,SACAC,EACExB,EADFwB,aAGIC,EAAY,IAAIC,KAAKF,GAAcG,cAEnCC,EAAeP,EAClBQ,KAAI,SAAAC,GACH,OAAOA,EAAQC,IAChB,IACAC,KAAK,MAER,OACE,iCACE,SAACxC,EAAD,WACE,SAACC,EAAD,CAAYwC,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAxC,wBAEF,UAACzC,EAAD,YACE,gBACE0C,IAAG,yCAAoCpC,EAAMqC,aAC7CC,IAAI,MAEN,UAAC3C,EAAD,YACE,0BACGyB,EADH,IACoBK,EADpB,QAGA,qCAAaG,MACb,wCAAgBN,MAChB,uBAAIC,WAGR,SAAClC,EAAD,sCACA,UAACF,EAAD,YACE,SAACG,EAAD,CAAS2C,GAAG,OAAZ,mBACA,SAAC3C,EAAD,CAAS2C,GAAG,UAAZ,yBAEF,SAAC,KAAD,CAAQM,QAASvC,EAAMG,OAG5B,C","sources":["components/MovieDetails/MovieDetails.js","service/getMovieById.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport getMovieById from 'service/getMovieById';\n\nconst NavList = styled('nav')`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Title = styled('h3')`\n  text-align: center;\n`;\n\nconst NavItem = styled(NavLink)`\n  font-size: 20px;\n`;\n\nconst ButtonBox = styled('div')`\n  margin-bottom: 20px;\n`;\n\nconst ButtonBack = styled(NavLink)`\n  padding: 5px;\n  background-color: white;\n  border: 2px solid red;\n  font-size: 20px;\n  color: black;\n  margin-bottom: 20px;\n`;\n\nconst MovieDetailsBox = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-around;\n`;\n\nconst MovieDescriptionsBox = styled('div')`\n  width: 50%;\n`;\n\nexport default function MovieDetails() {\n  const { trandingId } = useParams(null);\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getMovieById(trandingId)\n      .then(movie => setMovie(movie))\n      .catch(console.log);\n  }, [trandingId]);\n\n  const location = useLocation();\n\n  if (!movie || Object.keys(movie).length === 0) {\n    return <>Sorry, no film found, try again</>;\n  }\n\n  const {\n    original_title,\n    production_countries,\n    popularity,\n    overview,\n    release_date,\n  } = movie;\n\n  const movieYear = new Date(release_date).getFullYear();\n\n  const movieCountry = production_countries\n    .map(country => {\n      return country.name;\n    })\n    .join(', ');\n\n  return (\n    <>\n      <ButtonBox>\n        <ButtonBack to={location.state?.from ?? '/movies'}>Go back</ButtonBack>\n      </ButtonBox>\n      <MovieDetailsBox>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt=\"\"\n        />\n        <MovieDescriptionsBox>\n          <h2>\n            {original_title}({movieYear})\n          </h2>\n          <p>Country: {movieCountry}</p>\n          <p>Popularity: {popularity}</p>\n          <p>{overview}</p>\n        </MovieDescriptionsBox>\n      </MovieDetailsBox>\n      <Title>Additional information</Title>\n      <NavList>\n        <NavItem to=\"cast\">Cast</NavItem>\n        <NavItem to=\"reviews\">Reviews</NavItem>\n      </NavList>\n      <Outlet context={movie.id} />\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  trandingId: PropTypes.string,\n  movie: PropTypes.object,\n};\n","import { API_KEY } from 'variables/constants';\n\nexport default function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    Promise.reject('Something went wrong in getMovieId');\n  });\n}\n"],"names":["NavList","styled","Title","NavItem","NavLink","ButtonBox","ButtonBack","MovieDetailsBox","MovieDescriptionsBox","MovieDetails","trandingId","useParams","useState","movie","setMovie","useEffect","id","fetch","API_KEY","then","response","ok","json","Promise","reject","catch","console","log","location","useLocation","Object","keys","length","original_title","production_countries","popularity","overview","release_date","movieYear","Date","getFullYear","movieCountry","map","country","name","join","to","state","from","src","poster_path","alt","context"],"sourceRoot":""}