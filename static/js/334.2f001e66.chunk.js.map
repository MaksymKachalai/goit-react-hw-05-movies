{"version":3,"file":"static/js/334.2f001e66.chunk.js","mappings":"wOAMe,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,IANAC,EAAAA,EAAAA,YAAU,WCRG,IAAyBC,EDS/BN,ICT+BM,EDWpBN,ECVXO,MAAM,sCAAD,OAC4BD,EAD5B,4BACkDE,EAAAA,EADlD,2BAGTC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,yCAChB,IACAL,MAAK,SAAAC,GAAQ,OAAIA,EAASK,OAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,GAAZ,KDAcV,MAAK,SAAAN,GAAO,OAAIC,EAAWD,EAAf,GACrC,GAAE,CAACH,IAEmB,IAAnBG,EAAQiB,OACV,OACE,+BACE,wCAIN,IAAMC,EAAclB,EAAQmB,KAAI,SAAAC,GAC9B,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOjB,GAKnB,IAED,OACE,0BACE,wBAAKe,KAGV,C","sources":["components/Reviews/Reviews.js","service/getMovieReviews.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getMovieReviews from 'service/getMovieReviews';\nimport { useOutletContext } from 'react-router-dom';\n\nexport default function Reviews() {\n  const filmId = useOutletContext();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!filmId) return;\n\n    getMovieReviews(filmId).then(reviews => setReviews(reviews));\n  }, [filmId]);\n\n  if (reviews.length === 0)\n    return (\n      <>\n        <p>No reviews</p>\n      </>\n    );\n\n  const filmReviews = reviews.map(review => {\n    return (\n      <li key={review.id}>\n        <p>{review.author}</p>\n        <p>{review.content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul>{filmReviews}</ul>\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  filmId: PropTypes.string,\n  reviews: PropTypes.arrayOf(PropTypes.object),\n};\n","import { API_KEY } from 'variables/constants';\n\nexport default function getMovieReviews(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject('Something went wrong in getCastPromise');\n    })\n    .then(response => response.results)\n    .catch(err => console.log);\n}\n"],"names":["Reviews","filmId","useOutletContext","useState","reviews","setReviews","useEffect","id","fetch","API_KEY","then","response","ok","json","Promise","reject","results","catch","err","console","log","length","filmReviews","map","review","author","content"],"sourceRoot":""}