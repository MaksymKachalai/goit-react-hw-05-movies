{"version":3,"file":"static/js/63.7049654d.chunk.js","mappings":"sQAMMA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4CAIPE,GAAcF,EAAAA,EAAAA,IAAO,QAAPA,CAAH,yCAIXG,GAAOH,EAAAA,EAAAA,IAAO,OAAPA,CAAH,sEAKK,SAASI,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOM,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQN,EAAaO,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,GC3BM,SAAyBA,GACtC,OAAOG,MAAM,qDAAD,OAC2CC,EAAAA,EAD3C,4DACsGJ,IAE/GK,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,yCAChB,IACAL,MAAK,SAAAC,GAAQ,OAAIA,EAASK,OAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,GAAZ,GACb,CDgBGC,CAAgBhB,GAAOK,MAAK,SAAAC,GAAQ,OAAIT,EAAUS,EAAd,GACrC,GAAE,CAACN,EAAON,IAEX,IASMuB,EAAarB,EAAOsB,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACnC,OACE,yBACE,SAACpC,EAAD,CAASqC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMzB,GAArC,SACGsB,KAFID,EAMZ,IAED,OACE,4BACE,UAAC/B,EAAD,CAAMoC,OAAO,SAASC,SAjBL,SAAAC,GACnBA,EAAMC,iBACNhC,EAAgBJ,EAAa,CAAES,MAAOT,GAAe,CAAC,EACvD,EAcG,WACE,SAACJ,EAAD,CACEyC,KAAK,OACLC,SAxBkB,SAAAH,GACxBlC,EAAckC,EAAMI,cAAcC,MACnC,EAuBOA,MAAOxC,KAET,mBAAQqC,KAAK,SAAb,wBAEF,0BACE,wBAAKX,QAIZ,CEjEc,SAASe,IACtB,OACE,4BACE,SAAC3C,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["components/MovieSearch/MovieSearch.js","service/getMovieByQuery.js","pages/Movies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport getMovieByQuery from 'service/getMovieByQuery';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst NavItem = styled(NavLink)`\n  font-size: 20px;\n`;\n\nconst SearchInput = styled('input')`\n  width: 300px;\n`;\n\nconst Form = styled('form')`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function MovieSearch() {\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    getMovieByQuery(query).then(response => setMovies(response));\n  }, [query, searchParams]);\n\n  const handleInputChange = event => {\n    setInputValue(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(inputValue ? { query: inputValue } : {});\n  };\n\n  const moviesList = movies.map(({ id, original_title }) => {\n    return (\n      <li key={id}>\n        <NavItem to={`${id}`} state={{ from: location }}>\n          {original_title}\n        </NavItem>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <Form action=\"sumbit\" onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          onChange={handleInputChange}\n          value={inputValue}\n        />\n        <button type=\"sumbit\">Search</button>\n      </Form>\n      <div>\n        <ul>{moviesList}</ul>\n      </div>\n    </div>\n  );\n}\n\nMovieSearch.propTypes = {\n  inputValue: PropTypes.string,\n  searchParams: PropTypes.string,\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import { API_KEY } from 'variables/constants';\n\nexport default function getMovieByQuery(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject('Something went wrong in getCastPromise');\n    })\n    .then(response => response.results)\n    .catch(err => console.log);\n}\n","import { Outlet } from 'react-router-dom';\nimport MovieSearch from 'components/MovieSearch/MovieSearch';\nexport default function Movies() {\n  return (\n    <div>\n      <MovieSearch />\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["NavItem","styled","NavLink","SearchInput","Form","MovieSearch","useState","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","query","get","useEffect","fetch","API_KEY","then","response","ok","json","Promise","reject","results","catch","err","console","log","getMovieByQuery","moviesList","map","id","original_title","to","state","from","action","onSubmit","event","preventDefault","type","onChange","currentTarget","value","Movies"],"sourceRoot":""}